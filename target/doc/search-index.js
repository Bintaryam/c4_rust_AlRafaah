var searchIndex = new Map(JSON.parse('[["c4_rust_AlRafaah",{"t":"CCCCCPPPGPPPPFPPPPPPPPPFPGPFPPPFPPPPGPPPPPPPPPPPPPPPFPPPPPGPPGGPPPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOPPPPPPPFPPPPPPPPPPGPPPPPPPPPPPPPPPPPGPPPPPPPPPNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPFFPPPPPPPPPPPPPPPPPPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNFNNONNNNNNN","n":["ast","bytecode","lexer","parser","vm","Add","Addr","Assign","BinOp","Binary","BitAnd","BitNot","BitOr","Block","","Call","Cast","Char","Conditional","Deref","Div","Empty","Enum","EnumDecl","Eq","Expr","","FuncDef","Function","Ge","Global","GlobalDecl","Gt","If","Index","Int","Item","Le","LogAnd","LogOr","Lt","Mod","Mul","Ne","Neg","Not","Num","Plus","PostDec","PostInc","PreDec","PreInc","Program","Ptr","Return","Shl","Shr","SizeOf","Stmt","Str","Sub","Type","UnOp","Unary","Var","Void","While","Xor","body","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","clone_into","clone_to_uninit","compile","","","","","eq","","","","","","","","","","","fmt","","","","","","","","","","","from","","","","","","","","","","","into","","","","","","","","","","","items","locals","name","","params","ret","stmts","to_owned","try_from","","","","","","","","","","","try_into","","","","","","","","","","","ty","type_id","","","","","","","","","","","variants","args","array","callee","cond","else_expr","expr","","index","left","op","","right","then_expr","ty","body","cond","","else_branch","then_branch","ADD","ADJ","AND","BNZ","BZ","CLOS","Call","Chunk","DIV","ENT","EQ","EXIT","FREE","GE","GT","IMM","Instr","InstrInt","Instruction","JMP","JSR","Jump","LC","LE","LEA","LEV","LI","LT","MALC","MCMP","MOD","MSET","MUL","NE","OPEN","OR","OpCode","PRTF","PSH","READ","SC","SHL","SHR","SI","SUB","XOR","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","code","default","dump","eq","","fmt","","","from","","","into","","","push","push_call","push_int","push_jump","to_owned","","try_from","","","try_into","","","type_id","","","And","AndAnd","Assign","Char","Colon","Comma","Dec","Eof","EqEq","Ge","Gt","Ident","Inc","KwChar","KwElse","KwEnum","KwIf","KwInt","KwReturn","KwSizeof","KwVoid","KwWhile","LBrace","LBracket","LParen","Le","LexError","Lexer","Lt","Minus","Ne","Not","Num","Or","OrOr","Percent","Plus","Question","RBrace","RBracket","RParen","Semicolon","Shl","Shr","Slash","Star","Str","Tilde","Token","Xor","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","eq","fmt","","from","","","into","","","new","next_token","to_owned","try_from","","","try_into","","","type_id","","","Parser","borrow","borrow_mut","from","into","new","parse_program","try_from","try_into","type_id","VM","borrow","borrow_mut","debug","from","into","new","run","try_from","try_into","type_id"],"q":[[0,"c4_rust_AlRafaah"],[5,"c4_rust_AlRafaah::ast"],[186,"c4_rust_AlRafaah::ast::Expr"],[200,"c4_rust_AlRafaah::ast::Stmt"],[205,"c4_rust_AlRafaah::bytecode"],[292,"c4_rust_AlRafaah::lexer"],[372,"c4_rust_AlRafaah::parser"],[382,"c4_rust_AlRafaah::vm"],[393,"alloc::string"],[394,"core::result"],[395,"core::fmt"],[396,"core::any"]],"i":"`````BdBf1`Aj212`Ah11f2341Ad`5`2`050`5231`555555544344444`12553`35``33125Afl2AnB`3Bb78:9635214078:966663547835214078:9635214078:9635214078:9635214078:963424440635214078:9635214078:96235214078:961DbDd1Df0DhDj3Dl20031DnE`100Bn00000C``1111111100`11011111111111111`11111111110n21021212100021210210210000021210210210Cf0000000000000000000000000``00000000000000000000`0Cl1Ch120222220120120112120120120`Cn00000000`D`000000000","f":"`````````````````````````````````````````````````````````````````````{b{{b{c}}}{}}0000000000{{{b{d}}}{{b{dc}}}{}}0000000000{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{{b{l}}{b{dn}}}{{Ab{hA`}}}}{{{b{Ad}}{b{dn}}}{{Ab{hA`}}}}{{{b{Af}}{b{dn}}}{{Ab{hA`}}}}{{{b{Ah}}{b{dn}}}{{Ab{hA`}}}}{{{b{Aj}}{b{dn}}}{{Ab{hA`}}}}{{{b{l}}{b{l}}}Al}{{{b{Ad}}{b{Ad}}}Al}{{{b{An}}{b{An}}}Al}{{{b{B`}}{b{B`}}}Al}{{{b{Af}}{b{Af}}}Al}{{{b{Bb}}{b{Bb}}}Al}{{{b{Ah}}{b{Ah}}}Al}{{{b{Aj}}{b{Aj}}}Al}{{{b{Bd}}{b{Bd}}}Al}{{{b{Bf}}{b{Bf}}}Al}{{{b{f}}{b{f}}}Al}{{{b{l}}{b{dBh}}}Bj}{{{b{Ad}}{b{dBh}}}Bj}{{{b{An}}{b{dBh}}}Bj}{{{b{B`}}{b{dBh}}}Bj}{{{b{Af}}{b{dBh}}}Bj}{{{b{Bb}}{b{dBh}}}Bj}{{{b{Ah}}{b{dBh}}}Bj}{{{b{Aj}}{b{dBh}}}Bj}{{{b{Bd}}{b{dBh}}}Bj}{{{b{Bf}}{b{dBh}}}Bj}{{{b{f}}{b{dBh}}}Bj}{cc{}}0000000000{{}c{}}0000000000```````{bc{}}{c{{Ab{e}}}{}{}}0000000000{{}{{Ab{c}}}{}}0000000000`{bBl}0000000000``````````````````````````````````````````````````````````````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Bn}}}Bn}{{{b{C`}}}C`}{{b{b{dc}}}h{}}0{{bj}h}0`{{}n}{{{b{n}}}h}{{{b{Bn}}{b{Bn}}}Al}{{{b{C`}}{b{C`}}}Al}{{{b{Bn}}{b{dBh}}}Bj}{{{b{C`}}{b{dBh}}}Bj}{{{b{n}}{b{dBh}}}Bj}{cc{}}00{{}c{}}00{{{b{dn}}Bn}h}{{{b{dn}}BnCb}h}{{{b{dn}}BnCd}h}1{bc{}}0{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bBl}00``````````````````````````````````````````````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Cf}}}Cf}{{b{b{dc}}}h{}}{{bj}h}{{{b{Cf}}{b{Cf}}}Al}{{{b{Cf}}{b{dBh}}}Bj}{{{b{Ch}}{b{dBh}}}Bj}{cc{}}00{{}c{}}00{{{b{Cj}}}Cl}{{{b{dCl}}}{{Ab{CfCh}}}}?>>>===<<<`;:32{{{b{Cj}}}{{Ab{CnA`}}}}{{{b{dCn}}}{{Ab{lA`}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bBl}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}`:9{{}D`}{{{b{dD`}}{b{n}}}Cd}654","D":"Ij","p":[[1,"reference",null,null,1],[0,"mut"],[6,"Type",5],[1,"unit"],[1,"u8"],[5,"Program",5],[5,"Chunk",205],[5,"String",393],[6,"Result",394,null,1],[6,"Item",5],[5,"FuncDef",5],[6,"Stmt",5],[6,"Expr",5],[1,"bool"],[5,"GlobalDecl",5],[5,"EnumDecl",5],[5,"Block",5],[6,"BinOp",5],[6,"UnOp",5],[5,"Formatter",395],[8,"Result",395],[5,"TypeId",396],[6,"OpCode",205],[6,"Instruction",205],[1,"usize"],[1,"i64"],[6,"Token",292],[5,"LexError",292],[1,"str"],[5,"Lexer",292],[5,"Parser",372],[5,"VM",382],[15,"Call",186],[15,"Index",186],[15,"Conditional",186],[15,"Unary",186],[15,"Cast",186],[15,"Binary",186],[15,"While",200],[15,"If",200]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADwBIQAAAAAAAgAAAAQABAAKAAMADwAIABkAAAAbAAAAHQACACEAAQAkAAAAJgAOADYABAA8AAEAQAA5AJAAAQCTACYAuwAYANYABwDhAAEA5AANAPMAFgALAQQAGgENACkBAgAtAQIAMQEOAEEBAwBGAQwAVAEOAGsBCQB2AQEAfAEGAIUBBAA=","P":[[69,"T"],[91,""],[92,"T"],[93,""],[121,"T"],[132,"U"],[150,"T"],[151,"U,T"],[162,"U"],[174,""],[251,"T"],[257,""],[259,"T"],[261,""],[271,"T"],[274,"U"],[277,""],[281,"T"],[283,"U,T"],[286,"U"],[289,""],[342,"T"],[348,""],[349,"T"],[350,""],[354,"T"],[357,"U"],[360,""],[362,"T"],[363,"U,T"],[366,"U"],[369,""],[373,"T"],[376,"U"],[377,""],[379,"U,T"],[380,"U"],[381,""],[383,"T"],[387,"U"],[388,""],[390,"U,T"],[391,"U"],[392,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6633]}